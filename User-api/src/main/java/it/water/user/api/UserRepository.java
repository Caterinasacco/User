package it.water.user.api;

import it.water.core.api.model.PaginableResult;
import it.water.core.api.repository.query.Query;
import it.water.core.api.repository.query.QueryOrder;
import it.water.repository.jpa.api.WaterJpaRepository;
import it.water.user.model.WaterUser;

/**
 * @Generated by Water Generator
 * Interface component for User Repository.
 * It is used for CRUD operations, and to interact with the persistence layer.
 */
public interface UserRepository extends WaterJpaRepository<WaterUser> {
    /**
     * Find an existing user by username via query
     *
     * @param username parameter required to find an existing user
     * @return the user with username entered
     */
    WaterUser findByUsername(String username);

    /**
     * Find an existing user by username via query
     *
     * @param email parameter required to find an existing user
     * @return the user with username entered
     */
    WaterUser findByEmail(String email);

    /**
     * Finds all deleted user
     *
     * @param delta
     * @param page
     * @param filter
     * @param queryOrder
     * @return
     */
    PaginableResult<WaterUser> findAllDeleted(int delta, int page, Query filter, QueryOrder queryOrder);

    /**
     * Counts all deleted users
     *
     * @param filter
     * @return
     */
    long countAllDeleted(Query filter);

    /**
     * @param email          of the user that must be activated
     * @param activationCode the registration activation code
     */
    void activateUser(String email, String activationCode);

    /**
     * @param userId
     */
    void activateUser(long userId);

    /**
     * Admins can deactivate access to users
     *
     * @param userId
     */
    void deactivateUser(long userId);

    /**
     * @param email        of the user that must be unregistered
     * @param deletionCode deletion confirmation code
     */
    void unregisterUser(String email, String deletionCode);

    /**
     * @param id
     * @param salt
     * @param password
     */
    WaterUser updatePassword(long id, byte[] salt, String password);

}
